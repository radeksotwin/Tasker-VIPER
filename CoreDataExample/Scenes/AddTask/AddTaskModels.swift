//
//  AddTaskModels.swift
//  CoreDataExample
//
//  Created by Kacper Wygoda on 02.05.2018.
//  Copyright (c) 2018 Kacper Wygoda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum AddTask {
    
    struct TaskModel {
        var colorIndex: Int16 = 0
        var date: NSDate = Date() as NSDate
        var time: NSDate = Date() as NSDate
        var subtitle: String = ""
        var title: String = ""
        var taskDone: Bool = false
    }
    
    enum FetchData {
        struct Request {
        }
        struct Response {
            var task: TaskModel
        }
        struct ViewModel {
            var task: TaskModel
        }
    }
    
    enum UpdateDataStroage {
        struct Request {
            struct UpdateColor {
                var colorIndex: Int
            }
            struct UpdateDate {
                var date: Date
            }
            struct UpdateTime {
                var time: Date
            }
            struct UpdateTitle {
                var title: String
            }
            struct UpdateSubtitle {
                var subtitle: String
            }
        }
        struct Response {
            struct UpdateColor {
                var colorIndex: Int
            }
            struct UpdateDate {
                var date: String
            }
            struct UpdateTime {
                var time: String
            }
            struct UpdateTitle {
                var title: String
            }
            struct UpdateSubtitle {
                var subtitle: String
            }
        }
        struct ViewModel {
            struct UpdateColor {
                var colorIndex: Int
            }
            struct UpdateDate {
                var date: String
            }
            struct UpdateTime {
                var time: String
            }
            struct UpdateTitle {
                var title: String
            }
            struct UpdateSubtitle {
                var subtitle: String
            }
        }
    }
    
    enum AlertType {
        case filledIncorrectly
        case unfilled
    }
    
    enum FetchAlert {
        struct Request {
        }
        struct Response {
            var alert: UIAlertController
        }
        struct ViewModel {
            var alert: UIAlertController
        }
    }
    
    enum Completion {
        case success
        case fail
    }
    
    enum SaveTask {
        struct Request {
        }
        struct Response {
            var state: Completion
        }
        struct ViewModel {
            var state: Completion
        }
    }
}
